[package]
name = "rustc_codegen_cranelift"
version = "0.1.0"
edition = "2021"

[[bin]]
# This is used just to teach rust-analyzer how to check the build system. required-features is used
# to disable it for regular builds.
name = "y"
path = "./y.rs"
required-features = ["__check_build_system_using_ra"]

[lib]
crate-type = ["dylib"]

[dependencies]
# These have to be in sync with each other
cranelift-codegen = { path = "../wasmtime/cranelift/codegen", features = ["unwind"] }
cranelift-frontend = { path = "../wasmtime/cranelift/frontend" }
cranelift-module = { path = "../wasmtime/cranelift/module" }
cranelift-native = { path = "../wasmtime/cranelift/native" }
cranelift-jit = { path = "../wasmtime/cranelift/jit", optional = true }
cranelift-object = { path = "../wasmtime/cranelift/object" }
cranelift-interpreter = { path = "../wasmtime/cranelift/interpreter" }

target-lexicon = "0.12.0"
gimli = { version = "0.27.2", default-features = false, features = ["write"]}
object = { version = "0.30.3", default-features = false, features = ["std", "read_core", "write", "archive", "coff", "elf", "macho", "pe", "unaligned"] }
eh_frame_experiments = { git = "ssh://git@github.com/bjorn3/eh_frame_experiments.git" }

indexmap = "1.9.3"
libloading = { version = "0.7.3", optional = true }
once_cell = "1.10.0"
smallvec = "1.8.1"
serde = { version = "1.0.157", features = ["derive"], optional = true }
bincode = { version = "1.3.3", optional = true }

pretty_env_logger = "0.4.0"

[patch.crates-io]
# Uncomment to use local checkout of cranelift
#cranelift-codegen = { path = "../wasmtime/cranelift/codegen" }
#cranelift-frontend = { path = "../wasmtime/cranelift/frontend" }
#cranelift-module = { path = "../wasmtime/cranelift/module" }
#cranelift-native = { path = "../wasmtime/cranelift/native" }
#cranelift-jit = { path = "../wasmtime/cranelift/jit" }
#cranelift-object = { path = "../wasmtime/cranelift/object" }

gimli = { git = "https://github.com/bjorn3/gimli.git", branch = "bsc-unwinding-fix-lsda-encoding" }

[features]
# Enable features not ready to be enabled when compiling as part of rustc
unstable-features = ["jit", "inline_asm", "lto"]
jit = ["cranelift-jit", "libloading"]
inline_asm = []
lto = ["serde", "bincode", "cranelift-codegen/enable-serde", "cranelift-module/enable-serde"]
__check_build_system_using_ra = []

[package.metadata.rust-analyzer]
rustc_private = true

[profile.release]
debug = 2
debug-assertions = true
